generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  username   String   @unique
  email      String   @unique
  password   String
  isVerified Boolean  @default(true)
  createdAt  DateTime @default(now())
}

model MockTest {
  id          String @id @default(uuid())
  title       String
  subject     String
  duration    String
  questions   Int
  description String
  link        String
}

model Settings {
  id               String   @id @default("global") // fixed ID
  mockTestPassword String
  updatedAt        DateTime @updatedAt
}

model Grade {
  id        String    @id @default(uuid())
  name      String    @unique
  subjects  Subject[] // no need to set onDelete here
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Subject {
  id        String   @id @default(uuid())
  name      String
  grade     Grade    @relation(fields: [gradeId], references: [id], onDelete: Cascade)
  gradeId   String
  topics    Topic[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, gradeId])
}

model Topic {
  id        String   @id @default(uuid())
  title     String
  subject   Subject  @relation(fields: [subjectId], references: [id], onDelete: Cascade)
  subjectId String
  pdfs      Pdf[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([title, subjectId])
}

model Pdf {
  id        String   @id @default(uuid())
  name      String
  url       String
  topic     Topic    @relation(fields: [topicId], references: [id], onDelete: Cascade)
  topicId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
